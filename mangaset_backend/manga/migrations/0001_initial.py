# Generated by Django 5.2.5 on 2025-08-27 17:38

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color_code', models.CharField(default='#007bff', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Manga',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField()),
                ('author', models.CharField(max_length=100)),
                ('artist', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('ongoing', 'Ongoing'), ('completed', 'Completed'), ('hiatus', 'Hiatus'), ('cancelled', 'Cancelled')], default='ongoing', max_length=20)),
                ('publication_year', models.PositiveIntegerField(blank=True, null=True)),
                ('cover_image', models.ImageField(blank=True, upload_to='manga/covers/')),
                ('total_chapters', models.PositiveIntegerField(default=0)),
                ('rating', models.DecimalField(decimal_places=2, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('genres', models.ManyToManyField(related_name='manga', to='manga.genre')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_number', models.DecimalField(decimal_places=2, max_digits=6)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('images', models.JSONField(default=list)),
                ('page_count', models.PositiveIntegerField(default=0)),
                ('is_published', models.BooleanField(default=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('release_date', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manga', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='manga.manga')),
            ],
            options={
                'ordering': ['chapter_number'],
            },
        ),
        migrations.CreateModel(
            name='ReadingHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_page', models.PositiveIntegerField(default=0)),
                ('progress_percentage', models.FloatField(default=0.0)),
                ('first_read_at', models.DateTimeField(auto_now_add=True)),
                ('last_read_at', models.DateTimeField(auto_now=True)),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manga.chapter')),
                ('manga', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manga.manga')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_read_at'],
            },
        ),
        migrations.CreateModel(
            name='UserFavorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('manga', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manga.manga')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, upload_to='avatars/')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('reading_preferences', models.JSONField(default=dict)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='manga',
            index=models.Index(fields=['status'], name='manga_manga_status_1bbfac_idx'),
        ),
        migrations.AddIndex(
            model_name='manga',
            index=models.Index(fields=['rating'], name='manga_manga_rating_8efccc_idx'),
        ),
        migrations.AddIndex(
            model_name='manga',
            index=models.Index(fields=['view_count'], name='manga_manga_view_co_e17a85_idx'),
        ),
        migrations.AddIndex(
            model_name='chapter',
            index=models.Index(fields=['manga', 'chapter_number'], name='manga_chapt_manga_i_d04498_idx'),
        ),
        migrations.AddIndex(
            model_name='chapter',
            index=models.Index(fields=['release_date'], name='manga_chapt_release_2f7a34_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='chapter',
            unique_together={('manga', 'chapter_number')},
        ),
        migrations.AlterUniqueTogether(
            name='readinghistory',
            unique_together={('user', 'manga')},
        ),
        migrations.AlterUniqueTogether(
            name='userfavorite',
            unique_together={('user', 'manga')},
        ),
    ]
